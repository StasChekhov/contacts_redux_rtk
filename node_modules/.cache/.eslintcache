[{"/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/index.js":"1","/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/App.js":"2","/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/redux/store.js":"3","/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/redux/contactsApi.js":"4","/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/redux/clickSlice.js":"5","/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/components/Phonebook.jsx":"6","/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/components/Filter.jsx":"7","/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/components/ContactList.jsx":"8","/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/components/Section.jsx":"9","/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/components/ContactItems.jsx":"10"},{"size":479,"mtime":1654644611829,"results":"11","hashOfConfig":"12"},{"size":699,"mtime":1654724287245,"results":"13","hashOfConfig":"12"},{"size":807,"mtime":1654714722241,"results":"14","hashOfConfig":"12"},{"size":832,"mtime":1654898141162,"results":"15","hashOfConfig":"12"},{"size":920,"mtime":1654897602692,"results":"16","hashOfConfig":"12"},{"size":2362,"mtime":1654813897731,"results":"17","hashOfConfig":"12"},{"size":491,"mtime":1653567267138,"results":"18","hashOfConfig":"12"},{"size":1289,"mtime":1654897574859,"results":"19","hashOfConfig":"12"},{"size":136,"mtime":1654724093510,"results":"20","hashOfConfig":"12"},{"size":923,"mtime":1654900083079,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"lzxree",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"25"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/index.js",[],[],[],"/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/App.js",["56","57","58","59"],[],"import s from \"./components/Phonebook.module.css\";\nimport Section from \"./components/Section\";\nimport Phonebook from \"./components/Phonebook\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport { useGetContactsQuery } from \"redux/contactsApi\";\n// import { getContacts } from \"redux/clickSlice\";\n\nexport default function App() {\n const { data, error, isLoading } = useGetContactsQuery();\n return (\n  <div className={s.section}>\n   <Section title=\"Phonebook\">\n    <Phonebook />\n   </Section>\n   <Section title=\"Contacts\">\n    {/* {data.length < 1 ? <p>Your contacts list is empty</p> : <Filter />} */}\n    <ContactList />\n   </Section>\n  </div>\n );\n}\n","/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/redux/store.js",[],[],"/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/redux/contactsApi.js",[],[],"/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/redux/clickSlice.js",[],[],"/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/components/Phonebook.jsx",["60","61","62","63","64"],[],"import React, { useState } from \"react\";\n// import PropTypes from \"prop-types\";\nimport s from \"./Phonebook.module.css\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport { useAddContactMutation, useGetContactsQuery } from \"redux/contactsApi\";\n\nexport default function Phonebook() {\n const dispatch = useDispatch();\n\n const [name, setName] = useState(\"\");\n const [number, setNumber] = useState(\"\");\n\n const { data = [], error, isLoading, refetch } = useGetContactsQuery();\n const [addContact, result] = useAddContactMutation();\n\n const onSaveContact = async () => {\n  const contact = {\n   name,\n   number,\n  };\n\n  if (\n   data.find((item) => item.name.toLowerCase() === contact.name.toLowerCase())\n  ) {\n   return alert(`Contact ${name} already exists`);\n  }\n  await addContact({ id: nanoid(), name, number });\n };\n\n const handleSubmit = (e) => {\n  e.preventDefault();\n  onSaveContact();\n  setName(\"\");\n  setNumber(\"\");\n };\n\n return (\n  <>\n   <form onSubmit={handleSubmit} className={s.form}>\n    <div className={s.div}>\n     <label className={s.label}>Name</label>\n     <input\n      className={s.input}\n      id={nanoid()}\n      type=\"text\"\n      value={name}\n      onChange={(e) => setName(e.target.value)}\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      placeholder=\"Ivan Dudka\"\n     />\n     <label className={s.label}>Phone</label>\n     <input\n      className={s.input}\n      type=\"tel\"\n      value={number}\n      onChange={(e) => setNumber(e.target.value)}\n      name=\"number\"\n      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n      title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n      required\n      placeholder=\"+380\"\n     />\n     <button type=\"submit\" className={s.button}>\n      Add contact\n     </button>\n    </div>\n   </form>\n  </>\n );\n}\n\n// Phonebook.propTypes = {\n//  onAddContact: PropTypes.func.isRequired,\n// };\n","/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/components/Filter.jsx",[],[],"/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/components/ContactList.jsx",["65","66"],[],"import ContactItems from \"./ContactItems\";\nimport s from \"./Phonebook.module.css\";\n// import PropTypes from \"prop-types\";\nimport { useMemo } from \"react\";\nimport { getFilter } from \"redux/clickSlice\";\nimport { useSelector } from \"react-redux\";\nimport { useGetContactsQuery } from \"redux/contactsApi\";\n\nconst ContactList = () => {\n const filter = useSelector(getFilter);\n const { data = [], error, isLoading } = useGetContactsQuery();\n const filteredContacts = useMemo(\n  () =>\n   filter ? data.filter((contact) => contact.name.includes(filter)) : data,\n  [filter, data]\n );\n //  const filteredContacts = (data, filter) => {\n //   const normalizedFilter = filter.toLowerCase();\n //   return data.filter((contact) =>\n //    contact.name.toLowerCase().includes(normalizedFilter)\n //   );\n //  };\n return (\n  <ul>\n   {filteredContacts.map((e) => (\n    <li key={e.id} className={s.contact}>\n     <ContactItems id={e.id} name={e.name} number={e.number} />\n    </li>\n   ))}\n  </ul>\n );\n};\n\nexport default ContactList;\n\n// ContactList.propTypes = {\n//  listContacts: PropTypes.arrayOf(\n//   PropTypes.shape({\n//    id: PropTypes.string.isRequired,\n//    name: PropTypes.string.isRequired,\n//    number: PropTypes.string.isRequired,\n//   })\n//  ),\n//  // onDelete: PropTypes.func.isRequired,\n// };\n","/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/components/Section.jsx",[],[],"/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/components/ContactItems.jsx",["67","68","69"],[],{"ruleId":"70","severity":1,"message":"71","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":14},{"ruleId":"70","severity":1,"message":"74","line":10,"column":10,"nodeType":"72","messageId":"73","endLine":10,"endColumn":14},{"ruleId":"70","severity":1,"message":"75","line":10,"column":16,"nodeType":"72","messageId":"73","endLine":10,"endColumn":21},{"ruleId":"70","severity":1,"message":"76","line":10,"column":23,"nodeType":"72","messageId":"73","endLine":10,"endColumn":32},{"ruleId":"70","severity":1,"message":"77","line":9,"column":8,"nodeType":"72","messageId":"73","endLine":9,"endColumn":16},{"ruleId":"70","severity":1,"message":"75","line":14,"column":21,"nodeType":"72","messageId":"73","endLine":14,"endColumn":26},{"ruleId":"70","severity":1,"message":"76","line":14,"column":28,"nodeType":"72","messageId":"73","endLine":14,"endColumn":37},{"ruleId":"70","severity":1,"message":"78","line":14,"column":39,"nodeType":"72","messageId":"73","endLine":14,"endColumn":46},{"ruleId":"70","severity":1,"message":"79","line":15,"column":21,"nodeType":"72","messageId":"73","endLine":15,"endColumn":27},{"ruleId":"70","severity":1,"message":"75","line":11,"column":21,"nodeType":"72","messageId":"73","endLine":11,"endColumn":26},{"ruleId":"70","severity":1,"message":"76","line":11,"column":28,"nodeType":"72","messageId":"73","endLine":11,"endColumn":37},{"ruleId":"70","severity":1,"message":"80","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":17},{"ruleId":"70","severity":1,"message":"77","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":16},{"ruleId":"70","severity":1,"message":"79","line":8,"column":24,"nodeType":"72","messageId":"73","endLine":8,"endColumn":30},"no-unused-vars","'Filter' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'error' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'refetch' is assigned a value but never used.","'result' is assigned a value but never used.","'PropTypes' is defined but never used."]